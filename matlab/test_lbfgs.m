% test for LBFGS routine

close all;
clear;

Q = [32.0000   13.1000   -4.9000   -3.0000    6.0000    2.2000    2.6000    3.4000   -1.9000   -7.5000; ...
   13.1000   18.3000   -5.3000   -9.5000    3.0000    2.1000    3.9000    3.0000   -3.6000   -4.4000; ...
   -4.9000   -5.3000    7.7000    2.1000   -0.4000   -3.4000   -0.8000   -3.0000    5.3000    5.5000; ...
   -3.0000   -9.5000    2.1000   20.1000    1.1000    0.8000  -12.4000   -2.5000    5.5000    2.1000; ...
    6.0000    3.0000   -0.4000    1.1000    3.8000    0.6000    0.5000    0.9000   -0.4000   -2.0000; ...
    2.2000    2.1000   -3.4000    0.8000    0.6000    7.8000    2.9000   -1.3000   -4.3000   -5.1000; ...
    2.6000    3.9000   -0.8000  -12.4000    0.5000    2.9000   14.5000    1.7000   -4.9000    1.2000; ...
    3.4000    3.0000   -3.0000   -2.5000    0.9000   -1.3000    1.7000    6.6000   -0.8000    2.7000; ...
   -1.9000   -3.6000    5.3000    5.5000   -0.4000   -4.3000   -4.9000   -0.8000    7.9000    5.7000; ...
   -7.5000   -4.4000    5.5000    2.1000   -2.0000   -5.1000    1.2000    2.7000    5.7000   16.1000];

q = [2.9000 0.8000 1.3000 -1.1000 -0.5000 -0.3000 1.0000 -0.3000 0.7000 -2.1000]';

xs = [1.0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09; ...
      0.09,1.0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08; ...
      0.08,0.09,1.0,0.01,0.02,0.03,0.04,0.05,0.06,0.07; ...
      0.07,0.08,0.09,1.0,0.01,0.02,0.03,0.04,0.05,0.06; ...
      0.06,0.07,0.08,0.09,1.0,0.01,0.02,0.03,0.04,0.05]';
  
dirs_ref = [ ...
    -6.861170733797231e-01    -1.621334774299757e-01    -2.008976150849174e-01    -2.317011191832649e-01;
    -1.661270665201917e+00     2.870743130038509e-01     2.237224648542355e-01     2.980080835636925e-02;
     2.217225828759783e-01    -5.485761164147890e-01     4.811889625788801e-02    -1.267017945785352e-01;
     5.615134140894827e-01     9.992734938824946e-02    -6.855884193567087e-01     4.328230970765576e-02;
    -1.922426760799170e-01    -1.332550298134261e-02    -2.729265954345344e-02    -2.437461022925741e-01;
    -8.961101045874648e-02     5.326252573648004e-02     3.651730112313704e-02     1.349716200511426e-02;
    -3.044802963260585e-01    -6.299408068289099e-02     6.325330777317101e-02    -7.155992987801457e-04;
    -1.996235459345302e-01     1.525398352758627e-02     2.871281112230844e-02    -3.513449694839540e-03;
     1.267604425710271e-01    -7.776943954825605e-02    -1.285590864125103e-01    -5.603489763638487e-02;
     3.360845247013287e-01    -2.335884953507601e-02    -3.204963735369066e-03     5.612114259243502e-02 ];

dirs = []; % matrix of directions (to be filled in)

mem = 3;
col = 0; % last column of Sk, Yk that was filled in
currmem = 0;

S = zeros(10, 3);
Y = zeros(10, 3);
YS = zeros(1, 3);

x_old = xs(:,1);
grad_old = Q*x_old + q;
  
for i=2:5
    x = xs(:,i);
    grad = Q*x + q;
    Sk = x-x_old;
    Yk = grad-grad_old;
    YSk = Yk'*Sk;
    col = 1+mod(col, mem);
    currmem = min(currmem+1, mem);
    S(:,col) = Sk;
    Y(:,col) = Yk;
    YS(col) = YSk;
    dir = lbfgs(S, Y, YS, -grad, int32(col), int32(currmem));
    dirs = [dirs, dir];
    x_old = x;
    grad_old = grad;
end

if norm(dirs-dirs_ref, inf) <= 1e-12
    disp('test passed');
else
    disp('test failed');
end